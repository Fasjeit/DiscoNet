{
  "homepages": [],
  "source_base_path": "C:/git/DiscoNet/DiscoNet",
  "xrefmap": "xrefmap.yml",
  "files": [
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Config.PublicKeyVerifierDeligate.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Config.PublicKeyVerifierDeligate.html",
          "hash": "clobIBSTAC1SanNq15XkPQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Config.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Config.html",
          "hash": "UGiI7bHpMcTdvnQsHn1Y+g=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.KeyPair.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.KeyPair.html",
          "hash": "N/ZKTdmhxlu57aqEmLlYwg=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Net.Connection.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Net.Connection.html",
          "hash": "V/kMy/ii/UDUB0tsDdDeIw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Net.DiscoHelper.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Net.DiscoHelper.html",
          "hash": "plPxhKyLOZFIMoX3HlNpQQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Net.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Net.html",
          "hash": "QBxUNyn+zYDweP1jWW351Q=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Noise.Asymmetric.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Noise.Asymmetric.html",
          "hash": "gQzbUK6baPJ5lqtbdP4hTw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Noise.Enums.NoiseHandshakeType.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Noise.Enums.NoiseHandshakeType.html",
          "hash": "+UN736+GIbFx3NLfxE0CeA=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Noise.Enums.Tokens.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Noise.Enums.Tokens.html",
          "hash": "XQXaO2IwCG3ytCgucV+kmg=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Noise.Enums.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Noise.Enums.html",
          "hash": "DVh+ToNTt187tNxELQSWuw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Noise.HandshakeState.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Noise.HandshakeState.html",
          "hash": "jDTQoIiCBMvDsaqX2YS6RQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Noise.Hash.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Noise.Hash.html",
          "hash": "ZxwZldmXHBEuRu4mJEtpFw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Noise.Pattern.MessagePattern.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Noise.Pattern.MessagePattern.html",
          "hash": "7POs8368yasVg6rCngJm4g=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Noise.Pattern.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Noise.Pattern.html",
          "hash": "30/O7SnVf0wXKb9glNwcDQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Noise.Symmetric.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Noise.Symmetric.html",
          "hash": "woZgSW5FF7QzU5Lc6lbDYw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Noise.SymmetricState.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Noise.SymmetricState.html",
          "hash": "FjgLgzHVL3B4FbjLHnzgYg=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.Noise.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.Noise.html",
          "hash": "a9KNT1WH5fVObW2BU6oJMg=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DiscoNet.yml",
      "output": {
        ".html": {
          "relative_path": "api/DiscoNet.html",
          "hash": "vxU9IDKB6Qy9vdeLu+hD2Q=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "api/index.md",
      "output": {
        ".html": {
          "relative_path": "api/index.html",
          "hash": "r5LyLKZdpBz889Ru5LnZiA=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "api/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/toc.html",
          "hash": "gnrEegJzJumzH7LtBc8rSw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "index.md",
      "output": {
        ".html": {
          "relative_path": "index.html",
          "hash": "VZp0H7Aa9THyV71euJsu5A=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "toc.yml",
      "output": {
        ".html": {
          "relative_path": "toc.html",
          "hash": "zY1V+pupLZozODrXqPhyFw=="
        }
      },
      "is_incremental": false,
      "version": ""
    }
  ],
  "incremental_info": [
    {
      "status": {
        "can_incremental": false,
        "details": "Cannot build incrementally because docfx version changed from 2.38.1.0 to 2.39.2.0.",
        "incrementalPhase": "build"
      },
      "processors": {
        "TocDocumentProcessor": {
          "can_incremental": false,
          "details": "Processor TocDocumentProcessor cannot support incremental build because the processor doesn't implement ISupportIncrementalDocumentProcessor interface.",
          "incrementalPhase": "build"
        },
        "ConceptualDocumentProcessor": {
          "can_incremental": false,
          "incrementalPhase": "build"
        },
        "ManagedReferenceDocumentProcessor": {
          "can_incremental": false,
          "incrementalPhase": "build"
        }
      }
    },
    {
      "status": {
        "can_incremental": false,
        "details": "Cannot support incremental post processing, the reason is: it's disabled.",
        "incrementalPhase": "postProcessing"
      },
      "processors": {}
    }
  ],
  "version_info": {},
  "groups": [
    {
      "xrefmap": "xrefmap.yml"
    }
  ]
}